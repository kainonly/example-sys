generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  status     Boolean  @default(true)
  email      String   @unique @db.VarChar
  password   String   @db.VarChar
  name       String?  @db.VarChar
  roles      Int[]

  @@map("user")
}

model Role {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  status      Boolean  @default(true)
  name        String   @db.VarChar
  permissions Json     @default("{}")

  @@map("role")
}

model Project {
  id         Int        @id @default(autoincrement())
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  status     Boolean    @default(true)
  name       String     @db.VarChar
  tags       Tag[]
  workflows  Workflow[]

  @@map("project")
}

model Tag {
  id         Int             @id @default(autoincrement())
  created_at DateTime        @default(now())
  updated_at DateTime        @updatedAt
  status     Boolean         @default(true)
  project_id Int
  workflows  TagOnWorkflow[]
  name       String          @db.VarChar

  Project Project? @relation(fields: [project_id], references: [id])

  @@index([project_id])
  @@map("tag")
}

enum EventKind {
  Schedule
}

model Endpoint {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  status     Boolean   @default(true)
  name       String    @db.VarChar
  kind       EventKind
  option     Json      @default("{}")

  @@map("endpoint")
}

model Workflow {
  id         Int             @id @default(autoincrement())
  created_at DateTime        @default(now())
  updated_at DateTime        @updatedAt
  status     Boolean         @default(true)
  project_id Int
  name       String          @db.VarChar
  kind       EventKind
  metadata   Json            @default("{}")
  tags       TagOnWorkflow[]

  Project Project @relation(fields: [project_id], references: [id])

  @@index([project_id])
  @@map("workflow")
}

model TagOnWorkflow {
  tag_id      Int
  workflow_id Int

  Tag      Tag      @relation(fields: [tag_id], references: [id])
  Workflow Workflow @relation(fields: [workflow_id], references: [id])

  @@id([tag_id, workflow_id])
  @@index([tag_id])
  @@index([workflow_id])
  @@map("tag_on_workflow")
}
